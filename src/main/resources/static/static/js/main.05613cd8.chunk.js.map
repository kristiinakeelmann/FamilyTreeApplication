{"version":3,"sources":["familytreetemplate.svg","illustrations/undraw_female_avatar_w3jk.svg","illustrations/undraw_male_avatar_323b.svg","illustrations/undraw_gradma_wanr.svg","illustrations/undraw_page_not_found_su7k.svg","AppNavbar.js","FilterSearch.js","PersonList.js","PersonEdit.js","RelationEdit.js","FamilyTree.js","FamilyTreeView.js","StatisticsView.js","PageNotFound.js","App.js","index.js"],"names":["module","exports","AppNavbar","Navbar","color","dark","expand","Container","NavbarBrand","tag","Link","to","Nav","className","navbar","NavItem","NavLink","href","Component","FilterSearch","state","initialItems","items","filterList","event","key","target","value","filter","item","firstName","toLowerCase","includes","lastName","sex","setState","componentDidMount","props","content","personReactComponents","this","map","person","id","dateOfBirth","ButtonGroup","Button","size","FormGroup","Label","Input","type","placeholder","onChange","Table","width","React","PersonList","persons","isLoading","successMessage","fetch","then","response","json","data","Spinner","style","height","Alert","PersonEdit","emptyItem","handleChange","bind","handleSubmit","match","params","name","preventDefault","method","path","headers","body","JSON","stringify","status","object","errors","defaultMessage","hasErrors","history","push","handleSuccess","title","errorMessage","Form","onSubmit","for","autoComplete","check","FormText","withRouter","RelationEdit","handlePersonChange","handleMotherChange","handleFatherChange","selectedPersonId","selectedMotherId","selectedFatherId","getPerson","biologicalMotherId","biologicalFatherId","getBirthYear","parts","split","Date","toDateString","selectedPerson","mother","father","find","optionItems","optionItemsMothers","optionItemsFathers","getErrors","FamilyTree","familyMembers","getFamilyTree","previousProps","firstSister","secondSister","firstBrother","secondBrother","selectedPersonName","motherName","fatherName","motherMotherName","motherFatherName","fatherMotherName","fatherFatherName","children","sisters","length","brothers","position","src","FamilyTreeTemplate","alt","top","left","FamilyTreeView","showComponent","StatisticsView","youngestAunt","youngestUncle","mostAncestors","birthOrder","ancestorsNames","getYoungestAunt","getYoungestUncle","loadMostAncestors","allPersons","getBirthOrder","youngestAuntId","youngestUncleId","toString","mostAncestorsId","CardGroup","Card","CardTitle","class","FemaleAvatar","CardText","CardLink","MaleAvatar","AncestorAvatar","PageNotFound","PageNotFoundImage","App","exact","component","handlePersonSuccess","handleRelationSuccess","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.05613cd8.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/familytreetemplate.c5e2ce6e.svg\";","module.exports = __webpack_public_path__ + \"static/media/undraw_female_avatar_w3jk.31721699.svg\";","module.exports = __webpack_public_path__ + \"static/media/undraw_male_avatar_323b.0c675689.svg\";","module.exports = __webpack_public_path__ + \"static/media/undraw_gradma_wanr.11d43b6d.svg\";","module.exports = __webpack_public_path__ + \"static/media/undraw_page_not_found_su7k.6695af99.svg\";","import React, {Component} from 'react';\nimport { Nav, Navbar, NavbarBrand, NavItem, NavLink, Container} from 'reactstrap';\nimport {Link} from 'react-router-dom';\n\nexport default class AppNavbar extends Component {\n\n    render() {\n        return <Navbar color=\"dark\" dark expand=\"md\">\n            <Container>\n            <NavbarBrand tag={Link} to=\"/persons\">Home</NavbarBrand>\n            <NavbarBrand tag={Link} to=\"/person/new\">Add Person</NavbarBrand>\n            <NavbarBrand tag={Link} to=\"/relation/new\">Add Relation</NavbarBrand>\n            <NavbarBrand tag={Link} to=\"/familytree/new\">Generate Family Tree</NavbarBrand>\n            <NavbarBrand tag={Link} to=\"/statistics\">Statistics</NavbarBrand>\n                <Nav className=\"ml-auto\" navbar>\n                    <NavItem>\n                        <NavLink href=\"https://github.com/kristiinakeelmann/FamilyTreeApplication\">GitHub</NavLink>\n                    </NavItem>\n                </Nav>\n            </Container>\n        </Navbar>;\n\n    }\n}\n\n\n","import React from 'react';\nimport ButtonGroup from \"reactstrap/es/ButtonGroup\";\nimport { Button, Container, FormGroup, Label, Table, Input } from \"reactstrap\";\nimport {Link} from \"react-router-dom\";\n\nexport default class FilterSearch extends React.Component {\n\n    state = {\n        initialItems: [],\n        items: []\n    }\n\n\n    filterList = (event) => {\n        let items = this.state.initialItems;\n        let key = event.target.value;\n\n        if (key !== '') {\n            items = items.filter(function (item) {\n                if (item.firstName.toLowerCase().includes(key.toLowerCase())) {\n                    return true;\n                }\n                if (item.lastName.toLowerCase().includes(key.toLowerCase())) {\n                    return true;\n                }\n                if (item.sex.toLowerCase().includes(key.toLowerCase())) {\n                    return true;\n                }\n                return false;\n            });\n        }\n        this.setState({items: items});\n    }\n\n\n    componentDidMount = () => {\n        this.setState({\n            initialItems: this.props.content,\n            items: this.props.content\n        })\n    }\n\n    render() {\n        const personReactComponents = this.state.items.map(person => {\n            return <tr key={person.id}>\n                <td>{person.firstName}</td>\n                <td>{person.lastName}</td>\n                <td>{person.sex}</td>\n                <td>{person.dateOfBirth}</td>\n                <td>\n                    <ButtonGroup>\n                        <Button size=\"sm\" color=\"primary\" tag={Link} to={\"/person/\" + person.id}>Edit</Button>\n                    </ButtonGroup>\n                </td>\n            </tr>\n        });\n        return (\n            <div>\n                <Container>\n                    <h2>Persons</h2>\n                    <FormGroup>\n                        <Label>Search for person</Label>\n                        <Input type=\"text\" placeholder=\"Search\" onChange={this.filterList}/>\n                    </FormGroup>\n                    <Table className=\"mt-4\">\n                        <thead>\n                        <tr>\n                            <th width=\"20%\">First name</th>\n                            <th width=\"20%\">Last name</th>\n                            <th width=\"20%\">Sex</th>\n                            <th width=\"20%\">Birthday</th>\n                            <th width=\"20%\"></th>\n                        </tr>\n                        </thead>\n                        <tbody>\n                        {personReactComponents}\n                        </tbody>\n                    </Table>\n                </Container>\n            </div>\n        );\n    }\n};","import React, { Component } from 'react';\nimport { Container, Spinner, Alert } from 'reactstrap';\nimport AppNavbar from './AppNavbar';\nimport FilterSearch from './FilterSearch.js';\n\nclass PersonList extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n    persons: [],\n    isLoading: true,\n    successMessage: {},\n    }\n  }\n\n  componentDidMount() {\n    this.setState({isLoading: true});\n\n    fetch('/persons')\n      .then(response => response.json())\n      .then(data => this.setState({persons: data, isLoading: false}));\n  }\n\n  render() {\n    const persons = this.state.persons;\n    const isLoading = this.state.isLoading;\n    const successMessage = this.props.successMessage;\n\n    if (isLoading) {\n      return <Spinner style={{ width: '3rem', height: '3rem' }} type=\"grow\"/>;\n    }\n\n    return (\n      <div>\n        <AppNavbar/>\n        <Container>\n          {successMessage ? <Alert color=\"success\"> {successMessage} </Alert> : null}\n           <FilterSearch content={persons}/>\n        </Container>\n      </div>\n    );\n  }\n}\n\nexport default PersonList;","import React, {Component} from 'react';\nimport {Link, withRouter} from 'react-router-dom';\nimport {Button, Container, Form, FormGroup, Input, Label, FormText, Alert} from 'reactstrap';\nimport AppNavbar from './AppNavbar';\n\nclass PersonEdit extends Component {\n\n    emptyItem = {\n        firstName: '',\n        lastName: '',\n        sex: '',\n        dateOfBirth: ''\n    };\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            item: this.emptyItem\n        };\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    async componentDidMount() {\n        if (this.props.match.params.id !== 'new') {\n            const person = await (await fetch(`/person/${this.props.match.params.id}`)).json();\n            this.setState({item: person});\n        }\n    }\n\n    handleChange(event) {\n        const target = event.target;\n        const value = target.value;\n        const name = target.name;\n        let item = {...this.state.item};\n        item[name] = value;\n        this.setState({item});\n    }\n\n\n    async handleSubmit(event) {\n        event.preventDefault();\n        const {item} = this.state;\n\n        let method;\n        let path;\n\n        if (item.id != null) {\n            method = 'PUT';\n            path = '/person/' + item.id;\n        } else {\n            method = 'POST';\n            path = '/person/';\n        }\n\n        const hasErrors = await fetch(path, {\n            method: method,\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(item),\n\n        }).then(function (response) {\n            if (response.status === 400) {\n                return response.json()\n            } else return null;\n        }).then(function (object) {\n            if (object != null) {\n                const errormessage = object.errors[0].defaultMessage;\n                return errormessage;\n            } else return false;\n        })\n        this.setState({hasErrors: hasErrors});\n\n        if (!hasErrors) {\n            this.props.history.push('/persons');\n            this.props.handleSuccess();\n        }\n    }\n\n\n    render() {\n        const {item} = this.state;\n        const title = <h2>{item.id ? 'Edit Person' : 'Add Person'}</h2>;\n        const errorMessage = this.state.hasErrors;\n\n        return <div>\n            <AppNavbar/>\n            <Container>\n                {title}\n                {errorMessage ? <Alert color=\"danger\"> {errorMessage} </Alert> : null}\n                <Form onSubmit={this.handleSubmit}>\n                    <FormGroup>\n                        <Label for=\"firstName\">First name</Label>\n                        <Input type=\"text\" name=\"firstName\" id=\"firstName\" value={item.firstName || ''}\n                               onChange={this.handleChange} autoComplete=\"firstName\"/>\n                    </FormGroup>\n                    <FormGroup>\n                        <Label for=\"lastName\">Last name</Label>\n                        <Input type=\"text\" name=\"lastName\" id=\"lastName\" value={item.lastName || ''}\n                               onChange={this.handleChange} autoComplete=\"lastName\"/>\n                    </FormGroup>\n                    <FormGroup>\n                        <Label for=\"genderSelect\">Sex</Label>\n                        <FormGroup check>\n                            <Label check>\n                                <Input type=\"radio\" name=\"sex\" id=\"sexMale\" value={item.sex || 'male'}\n                                       onChange={this.handleChange} autoComplete=\"sex\"/> Male\n                            </Label>\n                        </FormGroup>\n                        <FormGroup check>\n                            <Label check>\n                                <Input type=\"radio\" name=\"sex\" id=\"sexFemale\" value={item.sex || 'female'}\n                                       onChange={this.handleChange} autoComplete=\"sex\"/> Female\n                            </Label>\n                        </FormGroup>\n                    </FormGroup>\n                    <FormGroup>\n                        <Label for=\"dateOfBirth\">Birthday</Label>\n                        <Input type=\"text\" name=\"dateOfBirth\" id=\"dateOfBirth\" value={item.dateOfBirth || ''}\n                               onChange={this.handleChange} autoComplete=\"dateOfBirth\"/>\n                        <FormText color=\"muted\">\n                            Format 1992-08-06\n                        </FormText>\n                    </FormGroup>\n                    <FormGroup>\n                        <Button color=\"primary\" type=\"submit\">Save</Button>{' '}\n                        <Button color=\"secondary\" tag={Link} to=\"/persons\">Cancel</Button>\n                    </FormGroup>\n                </Form>\n            </Container>\n        </div>\n    }\n}\n\nexport default withRouter(PersonEdit);","import React, {Component} from 'react';\nimport {Link, withRouter} from 'react-router-dom';\nimport {Button, Container, Form, FormGroup, Input, Label, Alert, Spinner} from 'reactstrap';\nimport AppNavbar from './AppNavbar';\n\nclass RelationEdit extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            persons: [],\n        };\n\n        this.handlePersonChange = this.handlePersonChange.bind(this);\n        this.handleMotherChange = this.handleMotherChange.bind(this);\n        this.handleFatherChange = this.handleFatherChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    componentDidMount() {\n        this.setState({isLoading: true});\n        this.setState({selectedPersonId: 1});\n        this.setState({selectedMotherId: 2});\n        this.setState({selectedFatherId: 3});\n\n        fetch('/persons')\n            .then(response => response.json())\n            .then(data => this.setState({persons: data, isLoading: false}));\n    }\n\n    getPerson(id) {\n        return this.state.persons.filter(person => person.id == id)[0];\n    }\n\n\n    handlePersonChange(event) {\n        const selectedPersonId = event.target.value;\n        this.setState({selectedPersonId: selectedPersonId});\n        if (selectedPersonId) {\n            this.setState({selectedMotherId: this.getPerson(selectedPersonId).biologicalMotherId})\n            this.setState({selectedFatherId: this.getPerson(selectedPersonId).biologicalFatherId})\n        }\n    }\n\n    handleMotherChange(event) {\n        this.setState({selectedMotherId: event.target.value});\n    }\n\n    handleFatherChange(event) {\n        this.setState({selectedFatherId: event.target.value});\n    }\n\n    getErrors() {\n\n        function getBirthYear(dateOfBirth) {\n            const parts = dateOfBirth.split('-');\n            const fullDate = new Date(parts[0], parts[1] - 1, parts[2]);\n            const year = fullDate.toDateString().split(\" \")[3]\n            return year;\n        }\n\n        const selectedPerson = this.getPerson(this.state.selectedPersonId);\n        if (selectedPerson == null) {\n            return \"Please select person\";\n        }\n        const mother = this.getPerson(this.state.selectedMotherId);\n        if (mother != null) {\n            if (getBirthYear(selectedPerson.dateOfBirth) < getBirthYear(mother.dateOfBirth)) {\n                return \"Mother has to be older than child\";\n            }\n            const father = this.getPerson(this.state.selectedFatherId);\n            if (father != null) {\n                if (getBirthYear(selectedPerson.dateOfBirth) < getBirthYear(father.dateOfBirth)) {\n                    return \"Father has to be older than child\";\n                }\n            }\n            return null;\n        }\n    }\n\n    async handleSubmit(event) {\n        event.preventDefault();\n        const selectedPersonId = this.state.selectedPersonId;\n        const selectedPerson = this.state.persons.find(person => person.id === selectedPersonId);\n        selectedPerson.biologicalMotherId = this.state.selectedMotherId;\n        selectedPerson.biologicalFatherId = this.state.selectedFatherId;\n\n        let method = 'PUT';\n        let path = '/person/' + selectedPersonId;\n\n        await fetch(path, {\n            method: method,\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(selectedPerson),\n\n        });\n        this.props.history.push('/persons');\n        this.props.handleSuccess();\n    }\n\n    render() {\n        const persons = this.state.persons;\n        const isLoading = this.state.isLoading;\n\n        if (isLoading) {\n            return <Spinner style={{width: '3rem', height: '3rem'}} type=\"grow\"/>;\n        }\n\n        let optionItems = persons\n            .map(person => <option key={person.id}\n                                   value={person.id}>{person.firstName + ' ' + person.lastName}</option>);\n\n        let optionItemsMothers = persons\n            .filter(person => person.sex === 'female')\n            .map(person => <option key={person.id}\n                                   value={person.id}>{person.firstName + ' ' + person.lastName}</option>);\n\n        let optionItemsFathers = persons\n            .filter(person => person.sex === 'male')\n            .map(person => <option key={person.id}\n                                   value={person.id}>{person.firstName + ' ' + person.lastName}</option>);\n\n        const title = <h2>{'Add Relation'}</h2>;\n        const errorMessage = this.getErrors();\n\n        return <div>\n            <AppNavbar/>\n            <Container>\n                {title}\n                {errorMessage ? <Alert color=\"warning\"> {errorMessage} </Alert> : null}\n                <Form onSubmit={this.handleSubmit}>\n                    <FormGroup>\n                        <Label for=\"exampleSelect\">Select Person</Label>\n                        <Input type=\"select\" name=\"selectPerson\"\n                               value={this.state.selectedPersonId ? this.state.selectedPersonId : null}\n                               onChange={this.handlePersonChange}>\n                            <option value=\"\"></option>\n                            {optionItems}\n                        </Input>\n                    </FormGroup>\n                    <FormGroup>\n                        <Label for=\"exampleSelect\">Select Biological Mother</Label>\n                        <Input type=\"select\" name=\"selectMother\"\n                               value={this.state.selectedMotherId ? this.state.selectedMotherId : null}\n                               onChange={this.handleMotherChange}>\n                            <option value=\"\"></option>\n                            {optionItemsMothers}\n                        </Input>\n                    </FormGroup>\n                    <FormGroup>\n                        <Label for=\"exampleSelect\">Select Biological Father</Label>\n                        <Input type=\"select\" name=\"selectFather\"\n                               value={this.state.selectedFatherId ? this.state.selectedFatherId : null}\n                               onChange={this.handleFatherChange}>\n                            <option value=\"\"></option>\n                            {optionItemsFathers}\n                        </Input>\n                    </FormGroup>\n                    <FormGroup>\n                        <Button color=\"primary\" type=\"submit\">Save</Button>{' '}\n                        <Button color=\"secondary\" tag={Link} to=\"/persons\">Cancel</Button>\n                    </FormGroup>\n                </Form>\n            </Container>\n        </div>\n    }\n}\n\nexport default withRouter(RelationEdit);","import React, {Component} from 'react';\nimport {withRouter} from 'react-router-dom';\nimport {Container, Spinner} from 'reactstrap';\nimport FamilyTreeTemplate from './familytreetemplate.svg';\n\n\nclass FamilyTree extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            familyMembers: {},\n            isLoading: true,\n            selectedPersonId: null\n        };\n    }\n\n    getFamilyTree(selectedPersonId) {\n\n        let method = 'GET';\n        let path = '/familytree/' + selectedPersonId;\n\n        fetch(path, {\n            method: method,\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            },\n        })\n            .then(response => response.json())\n            .then(data => this.setState({familyMembers: data, isLoading: false}));\n    }\n\n\n    componentDidMount() {\n        const {selectedPersonId} = this.props;\n        this.getFamilyTree(selectedPersonId);\n    }\n\n\n    componentDidUpdate(previousProps) {\n        const selectedPersonId = this.props.selectedPersonId;\n        if (previousProps.selectedPersonId !== selectedPersonId) {\n            this.getFamilyTree(selectedPersonId);\n        }\n    }\n\n\n    render() {\n        const isLoading = this.state.isLoading;\n        const familyMembers = this.state.familyMembers;\n\n        if (isLoading) {\n            return <Spinner style={{width: '3rem', height: '3rem'}} type=\"grow\"/>;\n        }\n\n        const selectedPersonName = familyMembers.selectedPersonName;\n        const motherName = familyMembers.motherName;\n        const fatherName = familyMembers.fatherName;\n        const motherMotherName = familyMembers.motherMotherName;\n        const motherFatherName = familyMembers.motherFatherName;\n        const fatherMotherName = familyMembers.fatherMotherName;\n        const fatherFatherName = familyMembers.fatherFatherName;\n        const children = familyMembers.children;\n\n        let firstSister;\n        let secondSister;\n        const sisters = familyMembers.sisters;\n        if (sisters.length > 0) {\n            firstSister = sisters[0];\n        }\n        if (sisters.length > 1) {\n            secondSister = sisters[1];\n        }\n\n        let firstBrother;\n        let secondBrother;\n        const brothers = familyMembers.brothers;\n        if (brothers.length > 0) {\n            firstBrother = brothers[0];\n        }\n        if (brothers.length > 0) {\n            secondBrother = brothers[1];\n        }\n\n        return <div>\n            <Container>\n                <div style={{position: \"relative\", width: \"1500px\"}}>\n                    <img src={FamilyTreeTemplate} alt=\"Family Tree\"/>\n                    <div style={{position: \"absolute\", top: \"290px\", left: \"580px\"}}> {selectedPersonName} </div>\n                    <div style={{position: \"absolute\", top: \"200px\", left: \"600px\"}}> {motherName} </div>\n                    <div style={{position: \"absolute\", top: \"200px\", left: \"750px\"}}> {fatherName} </div>\n                    <div style={{position: \"absolute\", top: \"115px\", left: \"250px\"}}> {motherMotherName} </div>\n                    <div style={{position: \"absolute\", top: \"115px\", left: \"400px\"}}> {motherFatherName} </div>\n                    <div style={{position: \"absolute\", top: \"115px\", left: \"1000px\"}}> {fatherMotherName} </div>\n                    <div style={{position: \"absolute\", top: \"115px\", left: \"1150px\"}}> {fatherFatherName} </div>\n                    <div style={{position: \"absolute\", top: \"290px\", left: \"250px\"}}> {firstSister} </div>\n                    <div style={{position: \"absolute\", top: \"290px\", left: \"400px\"}}> {secondSister} </div>\n                    <div style={{position: \"absolute\", top: \"290px\", left: \"750px\"}}> {firstBrother} </div>\n                    <div style={{position: \"absolute\", top: \"290px\", left: \"930px\"}}> {secondBrother} </div>\n                    <div style={{position: \"absolute\", top: \"390px\", left: \"500px\"}}> {children} </div>\n                </div>\n            </Container>\n        </div>\n    }\n}\n\nexport default withRouter(FamilyTree);","import React, {Component} from 'react';\nimport {Link, withRouter} from 'react-router-dom';\nimport {Button, Container, Form, FormGroup, Input, Label, Spinner} from 'reactstrap';\nimport AppNavbar from './AppNavbar';\nimport FamilyTree from \"./FamilyTree\";\n\n\nclass FamilyTreeView extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            persons: [],\n            isLoading: true,\n            showComponent: false\n        };\n\n        this.handlePersonChange = this.handlePersonChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n\n    componentDidMount() {\n        this.setState({isLoading: true});\n        this.setState({selectedPersonId: 1});\n\n        fetch('/persons')\n            .then(response => response.json())\n            .then(data => this.setState({persons: data, isLoading: false}));\n    }\n\n\n    handlePersonChange(event) {\n        const selectedPersonId = event.target.value;\n        this.setState({selectedPersonId: selectedPersonId});\n    }\n\n\n    handleSubmit(event) {\n        event.preventDefault();\n        this.setState({showComponent: true});\n    }\n\n\n    render() {\n        const persons = this.state.persons;\n        const isLoading = this.state.isLoading;\n\n        if (isLoading) {\n            return <Spinner style={{width: '3rem', height: '3rem'}} type=\"grow\"/>;\n        }\n\n        let optionItems = persons\n            .map(person => <option key={person.id}\n                                   value={person.id}>{person.firstName + ' ' + person.lastName}</option>);\n\n        const title = <h2>{'Generate Family Tree'}</h2>;\n\n        return <div>\n            <AppNavbar/>\n            <Container>\n                {title}\n                <Form onSubmit={this.handleSubmit}>\n                    <FormGroup>\n                        <Label for=\"exampleSelect\">Select Person</Label>\n                        <Input type=\"select\" name=\"selectPerson\" id=\"exampleSelect\"\n                               value={this.state.selectedPersonId ? this.state.selectedPersonId : null}\n                               onChange={this.handlePersonChange}>\n                            {optionItems}\n                        </Input>\n                    </FormGroup>\n                    <FormGroup>\n                        <Button color=\"primary\" type=\"submit\">Generate</Button>{' '}\n                        <Button color=\"secondary\" tag={Link} to=\"/persons\">Cancel</Button>\n                    </FormGroup>\n                    <FormGroup>\n                        {this.state.showComponent ? <FamilyTree selectedPersonId={this.state.selectedPersonId}/> : null}\n                    </FormGroup>\n                </Form>\n            </Container>\n        </div>\n    }\n}\n\nexport default withRouter(FamilyTreeView);","import React, {Component} from 'react';\nimport {Link, withRouter} from 'react-router-dom';\nimport {Container, Form, FormGroup, Input, Label, Alert, Spinner, Card, CardText, CardLink, CardTitle, CardGroup} from 'reactstrap';\nimport AppNavbar from './AppNavbar';\nimport FemaleAvatar from './illustrations/undraw_female_avatar_w3jk.svg';\nimport MaleAvatar from './illustrations/undraw_male_avatar_323b.svg';\nimport AncestorAvatar from './illustrations/undraw_gradma_wanr.svg';\n\nclass StatisticsView extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            persons: [],\n            youngestAunt: [],\n            youngestUncle: [],\n            mostAncestors: [],\n            birthOrder: [],\n            ancestorsNames: [],\n        };\n\n        this.handlePersonChange = this.handlePersonChange.bind(this);\n\n    }\n\n    async componentDidMount() {\n        this.setState({isLoading: true});\n        this.setState({selectedPersonId: 1});\n        this.getYoungestAunt();\n        this.getYoungestUncle();\n        this.loadMostAncestors();\n\n        const allPersons = await fetch('/persons')\n            .then(response => response.json());\n        this.setState({persons: allPersons, isLoading: false});\n\n    }\n\n    getPerson(id) {\n        return this.state.persons.filter(person => person.id == id)[0];\n    }\n\n    handlePersonChange(event) {\n        event.preventDefault();\n        const selectedPersonId = event.target.value;\n        this.setState({selectedPersonId: selectedPersonId});\n        this.getBirthOrder(selectedPersonId);\n\n    }\n\n    getYoungestAunt() {\n\n        let method = 'GET';\n        let path = '/youngestaunt';\n\n        fetch(path, {\n            method: method,\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            },\n        })\n            .then(response => response.json())\n            .then(data => this.setState({youngestAunt: data, isLoading: false}));\n    }\n\n    getYoungestUncle() {\n\n        let method = 'GET';\n        let path = '/youngestuncle';\n\n        fetch(path, {\n            method: method,\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            },\n        })\n            .then(response => response.json())\n            .then(data => this.setState({youngestUncle: data, isLoading: false}));\n    }\n\n    getBirthOrder(selectedPersonId) {\n\n        let method = 'GET';\n        let path = '/birthorder/' + selectedPersonId;\n\n        fetch(path, {\n            method: method,\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            },\n        })\n            .then(response => response.json())\n            .then(data => this.setState({birthOrder: data, isLoading: false}));\n    }\n\n    async loadMostAncestors() {\n\n        const mostAncestors = await fetch('/mostancestors')\n            .then(response => response.json());\n        this.setState({mostAncestors: mostAncestors, isLoading: false});\n\n        const ancestorsNames = await fetch('/ancestornames/' + mostAncestors.id)\n            .then(response => response.json());\n        this.setState({ancestorsNames: ancestorsNames, isLoading: false});\n\n\n    }\n\n    getErrors() {\n\n        const selectedPerson = this.getPerson(this.state.selectedPersonId);\n        if (selectedPerson == null) {\n            return \"Please select person\";\n        }\n\n    }\n\n    render() {\n        const persons = this.state.persons;\n        const isLoading = this.state.isLoading;\n        const youngestAunt = this.state.youngestAunt.firstName;\n        const youngestAuntId = this.state.youngestAunt.id;\n        const youngestUncle = this.state.youngestUncle.firstName;\n        const youngestUncleId = this.state.youngestUncle.id;\n        const birthOrder = this.state.birthOrder.toString();\n        const mostAncestors = this.state.mostAncestors.firstName;\n        const mostAncestorsId = this.state.mostAncestors.id;\n        const ancestorsNames = this.state.ancestorsNames;\n\n        if (isLoading) {\n            return <Spinner style={{width: '3rem', height: '3rem'}} type=\"grow\"/>;\n        }\n\n        let optionItems = persons\n            .map(person => <option key={person.id}\n                                   value={person.id}>{person.firstName + ' ' + person.lastName}</option>);\n\n        const title = <h2>{'Answers to the most burning questions'}</h2>;\n        const errorMessage = this.getErrors();\n\n        return <div>\n            <AppNavbar/>\n            <Container>\n                {title}\n                {errorMessage ? <Alert color=\"warning\"> {errorMessage} </Alert> : null}\n                <Form>\n                    <FormGroup>\n                        <Label for=\"exampleSelect\">Choose person to check the birth order</Label>\n                        <Input type=\"select\" name=\"selectPerson\" id=\"exampleSelect\"\n                               value={this.state.selectedPersonId ? this.state.selectedPersonId : null}\n                               onChange={this.handlePersonChange}>\n                            <option value=\"\"></option>\n                            {optionItems}\n                        </Input>\n                    </FormGroup>\n                    <FormGroup>\n                        {birthOrder}\n                    </FormGroup>\n                </Form>\n                <CardGroup>\n                    <Card body className=\"text-center\">\n                        <CardTitle>Youngest Aunt</CardTitle>\n                        <img class=\"center\" src={FemaleAvatar} alt=\"FemaleAvatar\"/>\n                        <CardText>{youngestAunt}</CardText>\n                        <CardLink href=\"#\" tag={Link} to={\"/person/\" + youngestAuntId}>Check her details</CardLink>\n                    </Card>\n                    <Card body className=\"text-center\">\n                        <CardTitle>Youngest Uncle</CardTitle>\n                        <img class=\"center\" src={MaleAvatar} alt=\"MaleAvatar\"/>\n                        <CardText>{youngestUncle}</CardText>\n                        <CardLink href=\"#\" tag={Link} to={\"/person/\" + youngestUncleId}>Check his details</CardLink>\n                    </Card>\n                </CardGroup>\n                <CardGroup>\n                    <Card body className=\"text-center\">\n                        <CardTitle>Most ancestors</CardTitle>\n                        <img class=\"center\" src={AncestorAvatar} alt=\"AncestorAvatar\"/>\n                        <CardText>{mostAncestors}</CardText>\n                        <CardText>{ancestorsNames}</CardText>\n                        <CardLink href=\"#\" tag={Link} to={\"/person/\" + mostAncestorsId}>Check details</CardLink>\n                    </Card>\n                </CardGroup>\n            </Container>\n        </div>\n    }\n}\n\nexport default withRouter(StatisticsView);","import React, {Component} from 'react';\nimport {Container, Card, CardText, CardGroup, CardLink} from 'reactstrap';\nimport AppNavbar from './AppNavbar';\nimport PageNotFoundImage from './illustrations/undraw_page_not_found_su7k.svg';\nimport {Link} from \"react-router-dom\";\n\nexport default class PageNotFound extends Component {\n\n    render() {\n        const title = <h2>{'Page Not Found'}</h2>;\n        return <div>\n            <AppNavbar/>\n            <Container>\n                {title}\n                <CardGroup>\n                    <Card body className=\"text-center\">\n                        <img class=\"center\" src={PageNotFoundImage} alt=\"AncestorAvatar\"/>\n                        <CardText>Genealogy isn't always easy!</CardText>\n                        <CardLink href=\"#\" tag={Link} to={\"/persons\"}>Return back to your family</CardLink>\n                    </Card>\n                </CardGroup>\n            </Container>\n        </div>\n    }\n}\n\n\n","import React, {Component} from 'react';\nimport './App.css';\nimport {BrowserRouter as Router, Route, Switch} from 'react-router-dom';\nimport PersonList from './PersonList';\nimport PersonEdit from './PersonEdit';\nimport RelationEdit from './RelationEdit';\nimport FamilyTreeView from \"./FamilyTreeView\";\nimport StatisticsView from \"./StatisticsView\";\nimport PageNotFound from \"./PageNotFound\";\n\nclass App extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {};\n    }\n\n    handleRelationSuccess() {\n        const relationSuccessMessage = \"Relation successfully added!\";\n        this.setState({successMessage: relationSuccessMessage});\n    }\n\n    handlePersonSuccess() {\n        const personSuccessMessage = \"Person successfully added!\";\n        this.setState({successMessage: personSuccessMessage});\n    }\n\n    render() {\n        return (\n            <Router>\n                <Switch>\n                    <Route path='/' exact={true} component={PersonList}/>\n                    <Route path='/persons' exact={true} component={() => <PersonList successMessage={this.state.successMessage}/>}/>\n                    <Route path='/person/:id' exact={true} component={() => <PersonEdit handleSuccess={() => {this.handlePersonSuccess()}}/>}/>\n                    <Route path='/relation/:id' exact={true} component={() => <RelationEdit handleSuccess={() => {this.handleRelationSuccess()}}/>}/>\n                    <Route path='/familytree/:id' exact={true} component={FamilyTreeView}/>\n                    <Route path='/statistics' exact={true} component={StatisticsView}/>\n                    <Route component={PageNotFound}/>\n                </Switch>\n            </Router>\n        )\n    }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App.js';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './custom.scss';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}